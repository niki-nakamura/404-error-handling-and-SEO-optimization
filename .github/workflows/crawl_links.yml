name: Link Checker

on:
  schedule:
    # 毎日 朝6時に実行
    - cron: '0 6 * * *'
    # 毎週月曜 9:30に実行
    - cron: '30 9 * * 1'
  workflow_dispatch:

jobs:
  streamlit_app_run:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Streamlit (with some method to keep it alive, or ephemeral)
        run: |
          streamlit run scripts/streamlit_app.py --server.headless=true --server.port=8501

      # 何らかの仕組みでユーザーがブラウザからアクセス → チェックを更新

      - name: Commit & push updated CSV
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add broken_links.csv
          git commit -m "Update broken_links.csv [skip ci]" || echo "No changes"
          git push origin HEAD:${{ github.ref_name }}
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: write  # CSVファイルをコミット＆プッシュするため

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run crawler
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          python scripts/crawl_links.py

      - name: Commit & Push broken_links.csv
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          
          git add broken_links.csv
          git commit -m "Update broken_links.csv [skip ci]" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}

      - name: Send Weekly Slack Alert
        run: |
          # 月曜だけSlack通知を飛ばす
          CURRENT_DAY=$(date +'%u')
          CURRENT_HOUR=$(date +'%H')
          CURRENT_MINUTE=$(date +'%M')

          # 月曜(1)の9:30だけ実行
          if [[ "$CURRENT_DAY" == "1" && "$CURRENT_HOUR" == "09" && "$CURRENT_MINUTE" == "30" ]]; then
              echo "Sending Slack alert..."
              # Slack通知の処理を追記 (下記は例です)
              # curl -X POST -H 'Content-type: application/json' \
              #      --data '{\"text\":\"新たに404がX件見つかりました。\"}' \
              #      \"$SLACK_WEBHOOK_URL\"
          else
              echo "Skipping Slack alert (not Monday 9:30)."
          fi
